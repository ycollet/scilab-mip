// ====================================================================
// Yann COLLETTE
// Copyright 2012
// This file is released into the public domain
// ====================================================================

function doelib = startModule()
   
  toolbox_name = "DoE"

  mprintf("Start " + toolbox_name + "\n");

  if isdef("doelib") then
    warning("DoE library is already loaded");
    return;
  end

  etc_tlbx  = get_absolute_file_path("doe.start");
  etc_tlbx  = getshortpathname(etc_tlbx);
  root_tlbx = strncpy( etc_tlbx, length(etc_tlbx)-length("\etc\") );

  //Load  functions library
  // =============================================================================
  mprintf("\tLoad macros\n");
  pathmacros = pathconvert( root_tlbx ) + "macros" + filesep();
  doelib = lib(pathmacros);
  
  // load gateways
  // =============================================================================
  //mprintf("\tLoad gateways\n");
  //verboseMode = ilib_verbose();
  //ilib_verbose(0);
  //exec(pathconvert(root_tlbx+"/sci_gateway/loader_gateway.sce",%f));
  //ilib_verbose(verboseMode);

  // Load and add help chapter
  // =============================================================================
  if or(getscilabmode() == ["NW";"STD"]) then
    mprintf("\tLoad help\n");
    path_addchapter = pathconvert(root_tlbx+"/jar");
    if ( isdir(path_addchapter) <> [] ) then
      add_help_chapter(toolbox_name, path_addchapter, %F);
    end
  end

  // Load demos
  // =============================================================================
  if or(getscilabmode() == ["NW";"STD"]) then
    mprintf("\tLoad demos\n");
    pathdemos = pathconvert(root_tlbx+"/demos/doe.dem.gateway.sce", %F, %T);
    add_demo(toolbox_name, pathdemos);
  end

  // Load Preferences GUI
  // =============================================================================
  //if getscilabmode() == "STD" then
  //  addModulePreferences(toolbox_name, root_tlbx, etc_tlbx + "doe_preferences.xml");
  //end

endfunction

doelib = startModule();
clear startModule; // remove startModule on stack
