<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0-subset Scilab" xml:id="fann_set_error_log" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:db="http://docbook.org/ns/docbook">
  <refnamediv>
    <refname>fann_set_error_log</refname>

    <refpurpose>Change where errors are logged to.</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>ann_err_out = fann_set_error_log(filename);</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term>filename</term>

        <listitem>
          <para>the name of the file where the errors will be logged</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>ann_err_out</term>

        <listitem>
          <para>a structure containing the informations related to the log
          file</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <para>Change where errors are logged to.</para>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example"><![CDATA[ 
path = get_absolute_file_path('train_on_data.sce');

filename = path + 'data/abelone.train';

max_epochs      = 1000;
desired_error   = 1e-5;
cascade_neurons = 100;

ann_train_data  = fann_readtrain_from_file(filename);

num_input  = fann_setup_train_data(ann_train_data,'num_input_train_data');
num_output = fann_setup_train_data(ann_train_data,'num_output_train_data');

ann = fann_create('shortcut',[num_input num_output]);
ann = fann_reset_MSE(ann);
ann = fann_init_weights(ann, ann_train_data);

ann_err = fann_set_error_log('error.log');

ann = fann_setup_train_data(ann_train_data,'set_input_scaling_params',ann,-1,1);
ann = fann_setup_train_data(ann_train_data,'set_output_scaling_params',ann,-1,1);
  
ann = fann_casc_train_on_data(ann,ann_train_data,cascade_neurons,desired_error);

ann = fann_setup_train_data(ann_train_data,'clear_scaling_params',ann);

ann = fann_test_data(ann, ann_train_data);
 ]]></programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="fann_create">fann_create</link></member>
      <member><link linkend="fann_setup_train_data">fann_setup_train_data</link></member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Authors</title>

    <simplelist type="vert">
      <member>Yann COLLETTE</member>
    </simplelist>
  </refsection>
</refentry>
