wait:=0;
border a(t=0,pi*2){ x = 3*cos(t); y = 2*sin(t)};		
border b(t=0,2*pi){ x = cos(t);  y = sin(t) };
mesh th = buildmesh(a(16) + b(-8)) ; 					

s:=sqrt(2);
ue = exp(x*s)*sin(y);								
dxue=s*exp(x*s)*sin(y);
dyue=exp(x*s)*cos(y);

array v=0;
eps:=500;
M:= 1000; n:=1; ii:=0;

for i=0 to 8 do
{
  if(M>eps) then
  {
   solve(u) with A(ii) {
	pde(u) u - laplace(u) = 0;
	on(a,b)  dnu(u)=v;
	};
  J:=int()((u-ue)^2 + (dx(u)-dxue)^2 + (dy(u)-dyue)^2);
  print("J=", J);
  
  array v1 = v - (u-ue);
  solve(u1) with A(1) {
	pde(u1) u1 - laplace(u1) = 0;
	on(a,b) dnu(u1)=v1;
	};
  K:=int()((u-ue)*(u1-u) + (dx(u)-dxue)*(dx(u1)-dx(u))+(dy(u)-dyue)*(dy(u1)-dy(u)));
  L:= int()((u1-u)^2+(dx(u1)-dx(u))^2+(dy(u1)-dy(u))^2);
  ro:=-K/L;
  array v = v - ro*(u-ue);
  print("ro=",ro);
  M:=int(a,b)((u-ue)^2);
  print("M=",M);
  print("eps=",eps);
  ii:=1;
  } else{ 
		  M=1000;
		  n:=n*2; 
		  mesh th = buildmesh(a(32*n)+b(-16*n)); 
		  eps := eps/10; ii:=0;  plot(u);
		  array v = v;
  		}
};
